The $scope object
	-holds the date
	-watchs for changes
	-provides expression context
	-nests & inhertis

$Scope Nesting
	- $scope(the root scope)
 		- $scope(nested scope)

Iteration
 	- ng-repeat="item in items"

Filters	
 	- ng-repeat="item in items | filter:query"
 	- there are also filteres for html manipulation
 	- {{item.count | number}}
 	- filter, limitTo, orderBy
 	- currency, date, number
 	- uppercase, lowercase
 	- Filter for items with property like 'John'
 	- "item in items | filter :'John' "
 	- "item in items | filter :{ name: 'John'}"
 	- "item in items | filter : isLarge" - isLarge method in model

Forms 
	- form novalidate nem='aForm'
	- input type='url' or type='email' required ng-model='hompage'
	- buttn ng-disable-"!aFrom.$valid"
	- ng-dirty / ng-pristine
	- ng-valied / ng-invalid

Utility Attributes
	- ng-model
	- ng-repeat
	- ng-controller
	- ng-hide & ng-show
	- ng-click & ng-mouse
	
Tools for writing
	- binding and templates
	- controllers

Modules
	- nicely isolated components
	- neat easy structures for larger projects
	- adds namespaces
	- separate function & configuration
	- provide libraries to pacgage specialised code
	- creeate module:
		angular.module('ModuldeName',['dependency1','dependecny2'])
	- configure module
		angular.module('ModuleName')
			.controller('ProductsControler', function($scope){
				$scope.products = product.query();
			});

	- custom filter
		angular.module('ModuleName')
			.filter('somename', function(){
				return function(thing, arg){
					// ...
					return newThing;
				};
			});
		{{item in items | somename:'name'}}

Subcontrollers
	-nested controllers
	-separate controller inside existing more focused on specific part of code
		.controller('ProductController', function($scope){
			$
		});

Service Factories
	- simplest way to provide service
	- any service AngularJs doesn't care
		anguler.moduler('ModuleName')
			.factory('somename', function(){

			});

ngResource
	- couple of api-s to reach to beackend and get data
	- neat API for nandling REST APIs
	- easy to use
	- asynchronous
		.factory('MailApi', function($resource){
			return $resource(
				'https://gmail.com/api/:email',
				{fomat: 'JSON'},
				{search :{
					method: 'GET',
					params: { folder: 'inbox'}
					isArray: true,
				}}
			)
		});

		.controller('MailController', function(MailApi){
			$scope.searchResult = MailApi.search({
				email:'something@gmail.com'
			});
		});

Routes and Views
	- angular builtin mdoule
	- neat API for sub-pages
	- browser history aware
		.config(function('$routeProvider'){
			$routeProvider
			.when('/',{
				templateUrl: 'templates/frontPage.html'
				controller: 'controllers/Controller'
			})
			.when('', {

			})
		});
	- add ng-view to konow which part is being manipulated